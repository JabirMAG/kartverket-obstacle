// <auto-generated />
using FirstWebApplication.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FirstWebApplication.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("FirstWebApplication.Models.Advice", b =>
                {
                    b.Property<int>("adviceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("adviceID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("adviceMessage")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("adviceID");

                    b.ToTable("Feedback");
                });

            modelBuilder.Entity("FirstWebApplication.Models.ObstacleData", b =>
                {
                    b.Property<int>("ObstacleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ObstacleId"));

                    b.Property<string>("GeometryGeoJson")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ObstacleDescription")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<double>("ObstacleHeight")
                        .HasColumnType("double");

                    b.Property<string>("ObstacleName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("ObstacleId");

                    b.ToTable("ObstaclesData");
                });
#pragma warning restore 612, 618
        }
    }
}
